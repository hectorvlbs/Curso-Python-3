# {************************************}#    Programa:      Herencia - Ejercicio 1#    Autor:         Villalobos Valenzuela Jesús Héctor#    Fecha:         27 de Marzo del 2020#    Descripción:   Programación orientada a objetos# {************************************}class Vehiculo():    def __init__(self, Color, Ruedas):        self.Color = Color        self.Ruedas = Ruedas    def __str__(self):        return "Color:\t{}\n" \               "Ruedas:\t{}\n".format(self.Color, self.Ruedas)class Coche(Vehiculo):    def __init__(self, Color, Ruedas, Velocidad):        Vehiculo.__init__(self, Color, Ruedas)        self.Velocidad = Velocidad    def __str__(self):        return "Velocidad:\t{}\n" \               "{}".format(self.Velocidad, Vehiculo.__str__(self))class Camioneta(Coche):    def __init__(self, Color, Ruedas, Velocidad, Carga):        Coche.__init__(self, Color, Ruedas, Velocidad)        self.Carga = Carga    def __str__(self):        return "{}" \               "Carga:\t{}".format(Coche.__str__(self), self.Carga)class Bicicleta(Vehiculo):    def __init__(self, Color, Ruedas, Tipo):        Vehiculo.__init__(self, Color, Ruedas)        self.Tipo = Tipo    def __str__(self):        return "{}" \               "Tipo:\t{}".format(Vehiculo.__str__(self), self.Tipo)def CatalogarVehiculosPorTipo(vehiculos):    Tipo1 = "Camioneta"    Tipo2 = "Bicicleta"    for vehiculo in vehiculos:        TipoDeVehiculo = type(vehiculo).__name__        if (TipoDeVehiculo == Tipo1):            print("Vehículo de tipo: {}".format(TipoDeVehiculo))            print("{}\n".format(vehiculo))        elif (TipoDeVehiculo == Tipo2):            print("Vehiculo de tipo: {}".format(TipoDeVehiculo))            print("{}\n".format(vehiculo))def CatalogarVehiculosPorRuedas(vehiculos, ruedas):    Encontrado = False    for vehiculo in vehiculos:        if (vehiculo.Ruedas == ruedas):            print("Vehículo de tipo: {}".format(type(vehiculo).__name__))            print("{}\n".format(vehiculo))            Encontrado = True    if (Encontrado != True):        print("No se encontraron vehículos con {} ruedas.".format(ruedas))def CatalogarVehiculosPorColores(vehiculos, color):    Encontrado = False    for vehiculo in vehiculos:        if (vehiculo.Color == color):            print("Vehículo de tipo: {}".format(type(vehiculo).__name__))            print("{}\n".format(vehiculo))            Encontrado = True    if (Encontrado != True):        print("No se encontraron vehículos de color: {}.".format(color))if __name__ == '__main__':    c1 = Camioneta("Azul", 4, "120 km/h", "300 kg")    c2 = Camioneta("Verde", 4, "220 km/h", "300 kg")    b1 = Bicicleta("Verde", 2, "Deportiva")    b2 = Bicicleta("Café", 2, "Deportiva")    b3 = Bicicleta("Verde", 2, "Urbana")    vehiculos = [c1, c2, b1, b2, b3]    #CatalogarVehiculosPorTipo(vehiculos)    #CatalogarVehiculosPorRuedas(vehiculos, 21)    CatalogarVehiculosPorColores(vehiculos, "Verde")